package com.ag.model;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TblUser generated by hbm2java
 */
@Entity
@Table(name = "tbl_user", catalog = "3d_customer_api")
public class TblUser implements java.io.Serializable {

	private Integer id;
	private TblUser tblUser;
	private TblUserType tblUserType;
	private String realm;
	private String username;
	private String password;
	private String email;
	private Byte emailVerified;
	private String verificationToken;
	private String name;
	private String managerName;
	private String contactNumber;
	private String gstNumber;
	private String pincode;
	private String country;
	private String state;
	private String district;
	private String address1;
	private String address2;
	private int maxNumberofAppsession;
	private Date validFrom;
	private Date validThru;
	private byte isDeleted;
	private Date createDatetime;
	private Date updateDatetime;
	private String phoneNumber;
	private String logoUrl;
	private Set<TblInvAccountFrame> tblInvAccountFrames = new HashSet<TblInvAccountFrame>(0);
	private Set<TblUserAccountStore> tblUserAccountStoresForAccountUserid = new HashSet<TblUserAccountStore>(0);
	private Set<TblOrderAccount> tblOrderAccountsForAccountUserId = new HashSet<TblOrderAccount>(0);
	private Set<TblUserAccountStore> tblUserAccountStoresForStoreUserid = new HashSet<TblUserAccountStore>(0);
	private Set<TblUser> tblUsers = new HashSet<TblUser>(0);
	private Set<TblOrderDistributor> tblOrderDistributorsForOrderbyId = new HashSet<TblOrderDistributor>(0);
	private Set<TblOrderitems> tblOrderitemses = new HashSet<TblOrderitems>(0);
	private Set<TblOrderAccount> tblOrderAccountsForOrderApprovedbyId = new HashSet<TblOrderAccount>(0);
	private Set<TblOrderDistributor> tblOrderDistributorsForAccountUserId = new HashSet<TblOrderDistributor>(0);
	private Set<TblOrderDistributor> tblOrderDistributorsForDistUserId = new HashSet<TblOrderDistributor>(0);
	private Set<TblOrderAccount> tblOrderAccountsForOrderbyId = new HashSet<TblOrderAccount>(0);
	private Set<TblCollectionDist> tblCollectionDists = new HashSet<TblCollectionDist>(0);
	private Set<TblInvDistFrame> tblInvDistFrames = new HashSet<TblInvDistFrame>(0);
	private Set<TblUserDistAccount> tblUserDistAccountsForDistUserid = new HashSet<TblUserDistAccount>(0);
	private Set<TblCollectionAccount> tblCollectionAccounts = new HashSet<TblCollectionAccount>(0);
	private Set<TblUserDistAccount> tblUserDistAccountsForAccountUserid = new HashSet<TblUserDistAccount>(0);

	public TblUser() {
	}

	public TblUser(TblUserType tblUserType, String password, String email, int maxNumberofAppsession, Date validFrom,
			byte isDeleted, Date createDatetime) {
		this.tblUserType = tblUserType;
		this.password = password;
		this.email = email;
		this.maxNumberofAppsession = maxNumberofAppsession;
		this.validFrom = validFrom;
		this.isDeleted = isDeleted;
		this.createDatetime = createDatetime;
	}

	public TblUser(TblUser tblUser, TblUserType tblUserType, String realm, String username, String password,
			String email, Byte emailVerified, String verificationToken, String name, String managerName,
			String contactNumber, String gstNumber, String pincode, String country, String state, String district,
			String address1, String address2, int maxNumberofAppsession, Date validFrom, Date validThru, byte isDeleted,
			Date createDatetime, Date updateDatetime, String phoneNumber, String logoUrl,
			Set<TblInvAccountFrame> tblInvAccountFrames, Set<TblUserAccountStore> tblUserAccountStoresForAccountUserid,
			Set<TblOrderAccount> tblOrderAccountsForAccountUserId,
			Set<TblUserAccountStore> tblUserAccountStoresForStoreUserid, Set<TblUser> tblUsers,
			Set<TblOrderDistributor> tblOrderDistributorsForOrderbyId, Set<TblOrderitems> tblOrderitemses,
			Set<TblOrderAccount> tblOrderAccountsForOrderApprovedbyId,
			Set<TblOrderDistributor> tblOrderDistributorsForAccountUserId,
			Set<TblOrderDistributor> tblOrderDistributorsForDistUserId,
			Set<TblOrderAccount> tblOrderAccountsForOrderbyId, Set<TblCollectionDist> tblCollectionDists,
			Set<TblInvDistFrame> tblInvDistFrames, Set<TblUserDistAccount> tblUserDistAccountsForDistUserid,
			Set<TblCollectionAccount> tblCollectionAccounts,
			Set<TblUserDistAccount> tblUserDistAccountsForAccountUserid) {
		this.tblUser = tblUser;
		this.tblUserType = tblUserType;
		this.realm = realm;
		this.username = username;
		this.password = password;
		this.email = email;
		this.emailVerified = emailVerified;
		this.verificationToken = verificationToken;
		this.name = name;
		this.managerName = managerName;
		this.contactNumber = contactNumber;
		this.gstNumber = gstNumber;
		this.pincode = pincode;
		this.country = country;
		this.state = state;
		this.district = district;
		this.address1 = address1;
		this.address2 = address2;
		this.maxNumberofAppsession = maxNumberofAppsession;
		this.validFrom = validFrom;
		this.validThru = validThru;
		this.isDeleted = isDeleted;
		this.createDatetime = createDatetime;
		this.updateDatetime = updateDatetime;
		this.phoneNumber = phoneNumber;
		this.logoUrl = logoUrl;
		this.tblInvAccountFrames = tblInvAccountFrames;
		this.tblUserAccountStoresForAccountUserid = tblUserAccountStoresForAccountUserid;
		this.tblOrderAccountsForAccountUserId = tblOrderAccountsForAccountUserId;
		this.tblUserAccountStoresForStoreUserid = tblUserAccountStoresForStoreUserid;
		this.tblUsers = tblUsers;
		this.tblOrderDistributorsForOrderbyId = tblOrderDistributorsForOrderbyId;
		this.tblOrderitemses = tblOrderitemses;
		this.tblOrderAccountsForOrderApprovedbyId = tblOrderAccountsForOrderApprovedbyId;
		this.tblOrderDistributorsForAccountUserId = tblOrderDistributorsForAccountUserId;
		this.tblOrderDistributorsForDistUserId = tblOrderDistributorsForDistUserId;
		this.tblOrderAccountsForOrderbyId = tblOrderAccountsForOrderbyId;
		this.tblCollectionDists = tblCollectionDists;
		this.tblInvDistFrames = tblInvDistFrames;
		this.tblUserDistAccountsForDistUserid = tblUserDistAccountsForDistUserid;
		this.tblCollectionAccounts = tblCollectionAccounts;
		this.tblUserDistAccountsForAccountUserid = tblUserDistAccountsForAccountUserid;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent_userid")
	public TblUser getTblUser() {
		return this.tblUser;
	}

	public void setTblUser(TblUser tblUser) {
		this.tblUser = tblUser;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_type_id", nullable = false)
	public TblUserType getTblUserType() {
		return this.tblUserType;
	}

	public void setTblUserType(TblUserType tblUserType) {
		this.tblUserType = tblUserType;
	}

	@Column(name = "realm", length = 512)
	public String getRealm() {
		return this.realm;
	}

	public void setRealm(String realm) {
		this.realm = realm;
	}

	@Column(name = "username", length = 512)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false, length = 512)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "email", nullable = false, length = 512)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "emailVerified")
	public Byte getEmailVerified() {
		return this.emailVerified;
	}

	public void setEmailVerified(Byte emailVerified) {
		this.emailVerified = emailVerified;
	}

	@Column(name = "verificationToken", length = 512)
	public String getVerificationToken() {
		return this.verificationToken;
	}

	public void setVerificationToken(String verificationToken) {
		this.verificationToken = verificationToken;
	}

	@Column(name = "name", length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "manager_name", length = 50)
	public String getManagerName() {
		return this.managerName;
	}

	public void setManagerName(String managerName) {
		this.managerName = managerName;
	}

	@Column(name = "contact_number", length = 100)
	public String getContactNumber() {
		return this.contactNumber;
	}

	public void setContactNumber(String contactNumber) {
		this.contactNumber = contactNumber;
	}

	@Column(name = "gst_number", length = 100)
	public String getGstNumber() {
		return this.gstNumber;
	}

	public void setGstNumber(String gstNumber) {
		this.gstNumber = gstNumber;
	}

	@Column(name = "pincode", length = 50)
	public String getPincode() {
		return this.pincode;
	}

	public void setPincode(String pincode) {
		this.pincode = pincode;
	}

	@Column(name = "country", length = 100)
	public String getCountry() {
		return this.country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	@Column(name = "state", length = 100)
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}

	@Column(name = "district", length = 100)
	public String getDistrict() {
		return this.district;
	}

	public void setDistrict(String district) {
		this.district = district;
	}

	@Column(name = "address1", length = 100)
	public String getAddress1() {
		return this.address1;
	}

	public void setAddress1(String address1) {
		this.address1 = address1;
	}

	@Column(name = "address2", length = 100)
	public String getAddress2() {
		return this.address2;
	}

	public void setAddress2(String address2) {
		this.address2 = address2;
	}

	@Column(name = "max_numberof_appsession", nullable = false)
	public int getMaxNumberofAppsession() {
		return this.maxNumberofAppsession;
	}

	public void setMaxNumberofAppsession(int maxNumberofAppsession) {
		this.maxNumberofAppsession = maxNumberofAppsession;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "valid_from", nullable = false, length = 19)
	public Date getValidFrom() {
		return this.validFrom;
	}

	public void setValidFrom(Date validFrom) {
		this.validFrom = validFrom;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "valid_thru", length = 19)
	public Date getValidThru() {
		return this.validThru;
	}

	public void setValidThru(Date validThru) {
		this.validThru = validThru;
	}

	@Column(name = "is_deleted", nullable = false)
	public byte getIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(byte isDeleted) {
		this.isDeleted = isDeleted;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_datetime", nullable = false, length = 19)
	public Date getCreateDatetime() {
		return this.createDatetime;
	}

	public void setCreateDatetime(Date createDatetime) {
		this.createDatetime = createDatetime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_datetime", length = 19)
	public Date getUpdateDatetime() {
		return this.updateDatetime;
	}

	public void setUpdateDatetime(Date updateDatetime) {
		this.updateDatetime = updateDatetime;
	}

	@Column(name = "phone_number", length = 20)
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Column(name = "logo_url", length = 300)
	public String getLogoUrl() {
		return this.logoUrl;
	}

	public void setLogoUrl(String logoUrl) {
		this.logoUrl = logoUrl;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUser")
	public Set<TblInvAccountFrame> getTblInvAccountFrames() {
		return this.tblInvAccountFrames;
	}

	public void setTblInvAccountFrames(Set<TblInvAccountFrame> tblInvAccountFrames) {
		this.tblInvAccountFrames = tblInvAccountFrames;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUserByAccountUserid")
	public Set<TblUserAccountStore> getTblUserAccountStoresForAccountUserid() {
		return this.tblUserAccountStoresForAccountUserid;
	}

	public void setTblUserAccountStoresForAccountUserid(Set<TblUserAccountStore> tblUserAccountStoresForAccountUserid) {
		this.tblUserAccountStoresForAccountUserid = tblUserAccountStoresForAccountUserid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUserByAccountUserId")
	public Set<TblOrderAccount> getTblOrderAccountsForAccountUserId() {
		return this.tblOrderAccountsForAccountUserId;
	}

	public void setTblOrderAccountsForAccountUserId(Set<TblOrderAccount> tblOrderAccountsForAccountUserId) {
		this.tblOrderAccountsForAccountUserId = tblOrderAccountsForAccountUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUserByStoreUserid")
	public Set<TblUserAccountStore> getTblUserAccountStoresForStoreUserid() {
		return this.tblUserAccountStoresForStoreUserid;
	}

	public void setTblUserAccountStoresForStoreUserid(Set<TblUserAccountStore> tblUserAccountStoresForStoreUserid) {
		this.tblUserAccountStoresForStoreUserid = tblUserAccountStoresForStoreUserid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUser")
	public Set<TblUser> getTblUsers() {
		return this.tblUsers;
	}

	public void setTblUsers(Set<TblUser> tblUsers) {
		this.tblUsers = tblUsers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUserByOrderbyId")
	public Set<TblOrderDistributor> getTblOrderDistributorsForOrderbyId() {
		return this.tblOrderDistributorsForOrderbyId;
	}

	public void setTblOrderDistributorsForOrderbyId(Set<TblOrderDistributor> tblOrderDistributorsForOrderbyId) {
		this.tblOrderDistributorsForOrderbyId = tblOrderDistributorsForOrderbyId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUser")
	public Set<TblOrderitems> getTblOrderitemses() {
		return this.tblOrderitemses;
	}

	public void setTblOrderitemses(Set<TblOrderitems> tblOrderitemses) {
		this.tblOrderitemses = tblOrderitemses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUserByOrderApprovedbyId")
	public Set<TblOrderAccount> getTblOrderAccountsForOrderApprovedbyId() {
		return this.tblOrderAccountsForOrderApprovedbyId;
	}

	public void setTblOrderAccountsForOrderApprovedbyId(Set<TblOrderAccount> tblOrderAccountsForOrderApprovedbyId) {
		this.tblOrderAccountsForOrderApprovedbyId = tblOrderAccountsForOrderApprovedbyId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUserByAccountUserId")
	public Set<TblOrderDistributor> getTblOrderDistributorsForAccountUserId() {
		return this.tblOrderDistributorsForAccountUserId;
	}

	public void setTblOrderDistributorsForAccountUserId(Set<TblOrderDistributor> tblOrderDistributorsForAccountUserId) {
		this.tblOrderDistributorsForAccountUserId = tblOrderDistributorsForAccountUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUserByDistUserId")
	public Set<TblOrderDistributor> getTblOrderDistributorsForDistUserId() {
		return this.tblOrderDistributorsForDistUserId;
	}

	public void setTblOrderDistributorsForDistUserId(Set<TblOrderDistributor> tblOrderDistributorsForDistUserId) {
		this.tblOrderDistributorsForDistUserId = tblOrderDistributorsForDistUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUserByOrderbyId")
	public Set<TblOrderAccount> getTblOrderAccountsForOrderbyId() {
		return this.tblOrderAccountsForOrderbyId;
	}

	public void setTblOrderAccountsForOrderbyId(Set<TblOrderAccount> tblOrderAccountsForOrderbyId) {
		this.tblOrderAccountsForOrderbyId = tblOrderAccountsForOrderbyId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUser")
	public Set<TblCollectionDist> getTblCollectionDists() {
		return this.tblCollectionDists;
	}

	public void setTblCollectionDists(Set<TblCollectionDist> tblCollectionDists) {
		this.tblCollectionDists = tblCollectionDists;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUser")
	public Set<TblInvDistFrame> getTblInvDistFrames() {
		return this.tblInvDistFrames;
	}

	public void setTblInvDistFrames(Set<TblInvDistFrame> tblInvDistFrames) {
		this.tblInvDistFrames = tblInvDistFrames;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUserByDistUserid")
	public Set<TblUserDistAccount> getTblUserDistAccountsForDistUserid() {
		return this.tblUserDistAccountsForDistUserid;
	}

	public void setTblUserDistAccountsForDistUserid(Set<TblUserDistAccount> tblUserDistAccountsForDistUserid) {
		this.tblUserDistAccountsForDistUserid = tblUserDistAccountsForDistUserid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUser")
	public Set<TblCollectionAccount> getTblCollectionAccounts() {
		return this.tblCollectionAccounts;
	}

	public void setTblCollectionAccounts(Set<TblCollectionAccount> tblCollectionAccounts) {
		this.tblCollectionAccounts = tblCollectionAccounts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUserByAccountUserid")
	public Set<TblUserDistAccount> getTblUserDistAccountsForAccountUserid() {
		return this.tblUserDistAccountsForAccountUserid;
	}

	public void setTblUserDistAccountsForAccountUserid(Set<TblUserDistAccount> tblUserDistAccountsForAccountUserid) {
		this.tblUserDistAccountsForAccountUserid = tblUserDistAccountsForAccountUserid;
	}

}

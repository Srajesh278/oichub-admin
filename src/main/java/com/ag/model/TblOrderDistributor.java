package com.ag.model;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TblOrderDistributor generated by hbm2java
 */
@Entity
@Table(name = "tbl_order_distributor", catalog = "3d_customer_api")
public class TblOrderDistributor implements java.io.Serializable {

	private Integer id;
	private TblOrderStatus tblOrderStatus;
	private TblUser tblUserByOrderbyId;
	private TblUser tblUserByAccountUserId;
	private TblUser tblUserByDistUserId;
	private byte isDeleted;
	private Date createDatetime;
	private Date updateDatetime;
	private Set<TblOrderitems> tblOrderitemses = new HashSet<TblOrderitems>(0);

	public TblOrderDistributor() {
	}

	public TblOrderDistributor(TblUser tblUserByOrderbyId, TblUser tblUserByAccountUserId, TblUser tblUserByDistUserId,
			byte isDeleted, Date createDatetime) {
		this.tblUserByOrderbyId = tblUserByOrderbyId;
		this.tblUserByAccountUserId = tblUserByAccountUserId;
		this.tblUserByDistUserId = tblUserByDistUserId;
		this.isDeleted = isDeleted;
		this.createDatetime = createDatetime;
	}

	public TblOrderDistributor(TblOrderStatus tblOrderStatus, TblUser tblUserByOrderbyId,
			TblUser tblUserByAccountUserId, TblUser tblUserByDistUserId, byte isDeleted, Date createDatetime,
			Date updateDatetime, Set<TblOrderitems> tblOrderitemses) {
		this.tblOrderStatus = tblOrderStatus;
		this.tblUserByOrderbyId = tblUserByOrderbyId;
		this.tblUserByAccountUserId = tblUserByAccountUserId;
		this.tblUserByDistUserId = tblUserByDistUserId;
		this.isDeleted = isDeleted;
		this.createDatetime = createDatetime;
		this.updateDatetime = updateDatetime;
		this.tblOrderitemses = tblOrderitemses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "order_status_id")
	public TblOrderStatus getTblOrderStatus() {
		return this.tblOrderStatus;
	}

	public void setTblOrderStatus(TblOrderStatus tblOrderStatus) {
		this.tblOrderStatus = tblOrderStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "orderby_id", nullable = false)
	public TblUser getTblUserByOrderbyId() {
		return this.tblUserByOrderbyId;
	}

	public void setTblUserByOrderbyId(TblUser tblUserByOrderbyId) {
		this.tblUserByOrderbyId = tblUserByOrderbyId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "account_user_id", nullable = false)
	public TblUser getTblUserByAccountUserId() {
		return this.tblUserByAccountUserId;
	}

	public void setTblUserByAccountUserId(TblUser tblUserByAccountUserId) {
		this.tblUserByAccountUserId = tblUserByAccountUserId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "dist_user_id", nullable = false)
	public TblUser getTblUserByDistUserId() {
		return this.tblUserByDistUserId;
	}

	public void setTblUserByDistUserId(TblUser tblUserByDistUserId) {
		this.tblUserByDistUserId = tblUserByDistUserId;
	}

	@Column(name = "is_deleted", nullable = false)
	public byte getIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(byte isDeleted) {
		this.isDeleted = isDeleted;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_datetime", nullable = false, length = 19)
	public Date getCreateDatetime() {
		return this.createDatetime;
	}

	public void setCreateDatetime(Date createDatetime) {
		this.createDatetime = createDatetime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_datetime", length = 19)
	public Date getUpdateDatetime() {
		return this.updateDatetime;
	}

	public void setUpdateDatetime(Date updateDatetime) {
		this.updateDatetime = updateDatetime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblOrderDistributor")
	public Set<TblOrderitems> getTblOrderitemses() {
		return this.tblOrderitemses;
	}

	public void setTblOrderitemses(Set<TblOrderitems> tblOrderitemses) {
		this.tblOrderitemses = tblOrderitemses;
	}

}

package com.ag.model;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TblCollectionAccount generated by hbm2java
 */
@Entity
@Table(name = "tbl_collection_account", catalog = "3d_customer_api")
public class TblCollectionAccount implements java.io.Serializable {

	private Integer id;
	private TblUser tblUser;
	private String collectionName;
	private String collectionImageUrl;
	private String collectionBannerimageUrl;
	private int order;
	private byte isDeleted;
	private Date createDatetime;
	private Date updateDatetime;
	private Set<TblCollectionAccountFrame> tblCollectionAccountFrames = new HashSet<TblCollectionAccountFrame>(0);

	public TblCollectionAccount() {
	}

	public TblCollectionAccount(TblUser tblUser, String collectionName, int order, byte isDeleted,
			Date createDatetime) {
		this.tblUser = tblUser;
		this.collectionName = collectionName;
		this.order = order;
		this.isDeleted = isDeleted;
		this.createDatetime = createDatetime;
	}

	public TblCollectionAccount(TblUser tblUser, String collectionName, String collectionImageUrl,
			String collectionBannerimageUrl, int order, byte isDeleted, Date createDatetime, Date updateDatetime,
			Set<TblCollectionAccountFrame> tblCollectionAccountFrames) {
		this.tblUser = tblUser;
		this.collectionName = collectionName;
		this.collectionImageUrl = collectionImageUrl;
		this.collectionBannerimageUrl = collectionBannerimageUrl;
		this.order = order;
		this.isDeleted = isDeleted;
		this.createDatetime = createDatetime;
		this.updateDatetime = updateDatetime;
		this.tblCollectionAccountFrames = tblCollectionAccountFrames;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "account_userid", nullable = false)
	public TblUser getTblUser() {
		return this.tblUser;
	}

	public void setTblUser(TblUser tblUser) {
		this.tblUser = tblUser;
	}

	@Column(name = "collection_name", nullable = false, length = 100)
	public String getCollectionName() {
		return this.collectionName;
	}

	public void setCollectionName(String collectionName) {
		this.collectionName = collectionName;
	}

	@Column(name = "collection_image_url", length = 200)
	public String getCollectionImageUrl() {
		return this.collectionImageUrl;
	}

	public void setCollectionImageUrl(String collectionImageUrl) {
		this.collectionImageUrl = collectionImageUrl;
	}

	@Column(name = "collection_bannerimage_url", length = 200)
	public String getCollectionBannerimageUrl() {
		return this.collectionBannerimageUrl;
	}

	public void setCollectionBannerimageUrl(String collectionBannerimageUrl) {
		this.collectionBannerimageUrl = collectionBannerimageUrl;
	}

	@Column(name = "order", nullable = false)
	public int getOrder() {
		return this.order;
	}

	public void setOrder(int order) {
		this.order = order;
	}

	@Column(name = "is_deleted", nullable = false)
	public byte getIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(byte isDeleted) {
		this.isDeleted = isDeleted;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_datetime", nullable = false, length = 19)
	public Date getCreateDatetime() {
		return this.createDatetime;
	}

	public void setCreateDatetime(Date createDatetime) {
		this.createDatetime = createDatetime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_datetime", length = 19)
	public Date getUpdateDatetime() {
		return this.updateDatetime;
	}

	public void setUpdateDatetime(Date updateDatetime) {
		this.updateDatetime = updateDatetime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblCollectionAccount")
	public Set<TblCollectionAccountFrame> getTblCollectionAccountFrames() {
		return this.tblCollectionAccountFrames;
	}

	public void setTblCollectionAccountFrames(Set<TblCollectionAccountFrame> tblCollectionAccountFrames) {
		this.tblCollectionAccountFrames = tblCollectionAccountFrames;
	}

}
